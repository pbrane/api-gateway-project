/*
 * RMA_RestAPI_Design_1
 * Customer Requirements from Excel Document RMA_RestAPI_Design 1.xlsx
 *
 * OpenAPI spec version: 0.0.6
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Represents a relationship between trouble Trouble Tickets
 */
@Schema(description = "Represents a relationship between trouble Trouble Tickets")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-08-29T19:29:38.424806759Z[GMT]")

public class CaseRelationship {
  @SerializedName("id")
  private String id = null;

  @SerializedName("href")
  private String href = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("relationshipType")
  private String relationshipType = null;

  @SerializedName("@baseType")
  private String _atBaseType = null;

  @SerializedName("@schemaLocation")
  private String _atSchemaLocation = null;

  @SerializedName("@type")
  private String _atType = null;

  public CaseRelationship id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the Trouble Ticket
   * @return id
  **/
  @Schema(description = "Unique identifier of the Trouble Ticket")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CaseRelationship href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Reference of the Trouble Ticket
   * @return href
  **/
  @Schema(description = "Reference of the Trouble Ticket")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public CaseRelationship name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the Trouble Ticket
   * @return name
  **/
  @Schema(description = "Name of the Trouble Ticket")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CaseRelationship relationshipType(String relationshipType) {
    this.relationshipType = relationshipType;
    return this;
  }

   /**
   * Type of the  Trouble Ticket relationship can be isChiled, dependent etc...
   * @return relationshipType
  **/
  @Schema(description = "Type of the  Trouble Ticket relationship can be isChiled, dependent etc...")
  public String getRelationshipType() {
    return relationshipType;
  }

  public void setRelationshipType(String relationshipType) {
    this.relationshipType = relationshipType;
  }

  public CaseRelationship _atBaseType(String _atBaseType) {
    this._atBaseType = _atBaseType;
    return this;
  }

   /**
   * When sub-classing, this defines the super-class
   * @return _atBaseType
  **/
  @Schema(description = "When sub-classing, this defines the super-class")
  public String getAtBaseType() {
    return _atBaseType;
  }

  public void setAtBaseType(String _atBaseType) {
    this._atBaseType = _atBaseType;
  }

  public CaseRelationship _atSchemaLocation(String _atSchemaLocation) {
    this._atSchemaLocation = _atSchemaLocation;
    return this;
  }

   /**
   * A URI to a JSON-Schema file that defines additional attributes and relationships
   * @return _atSchemaLocation
  **/
  @Schema(description = "A URI to a JSON-Schema file that defines additional attributes and relationships")
  public String getAtSchemaLocation() {
    return _atSchemaLocation;
  }

  public void setAtSchemaLocation(String _atSchemaLocation) {
    this._atSchemaLocation = _atSchemaLocation;
  }

  public CaseRelationship _atType(String _atType) {
    this._atType = _atType;
    return this;
  }

   /**
   * When sub-classing, this defines the sub-class entity name
   * @return _atType
  **/
  @Schema(description = "When sub-classing, this defines the sub-class entity name")
  public String getAtType() {
    return _atType;
  }

  public void setAtType(String _atType) {
    this._atType = _atType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CaseRelationship caseRelationship = (CaseRelationship) o;
    return Objects.equals(this.id, caseRelationship.id) &&
        Objects.equals(this.href, caseRelationship.href) &&
        Objects.equals(this.name, caseRelationship.name) &&
        Objects.equals(this.relationshipType, caseRelationship.relationshipType) &&
        Objects.equals(this._atBaseType, caseRelationship._atBaseType) &&
        Objects.equals(this._atSchemaLocation, caseRelationship._atSchemaLocation) &&
        Objects.equals(this._atType, caseRelationship._atType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, href, name, relationshipType, _atBaseType, _atSchemaLocation, _atType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CaseRelationship {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    relationshipType: ").append(toIndentedString(relationshipType)).append("\n");
    sb.append("    _atBaseType: ").append(toIndentedString(_atBaseType)).append("\n");
    sb.append("    _atSchemaLocation: ").append(toIndentedString(_atSchemaLocation)).append("\n");
    sb.append("    _atType: ").append(toIndentedString(_atType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
