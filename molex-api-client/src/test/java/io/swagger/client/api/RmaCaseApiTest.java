/*
 * RMA_RestAPI_Design_1
 * Customer Requirements from Excel Document RMA_RestAPI_Design 1.xlsx
 *
 * OpenAPI spec version: 0.0.6
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.Attachment;
import io.swagger.client.model.Error;
import java.io.File;
import io.swagger.client.model.InlineResponse201;
import io.swagger.client.model.Note;
import io.swagger.client.model.NoteCreate;
import org.threeten.bp.OffsetDateTime;
import io.swagger.client.model.RmaCase;
import io.swagger.client.model.RmaCaseCreate;
import io.swagger.client.model.TacCaseStatus;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for RmaCaseApi
 */
@Ignore
public class RmaCaseApiTest {

    private final RmaCaseApi api = new RmaCaseApi();

    /**
     * Creates a note assocated with a RMA Case
     *
     * This operation creates adds a Case Note to a TAC Case
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createRmaCaseNoteTest() throws Exception {
        NoteCreate body = null;
        String caseNumber = null;
        Note response = api.createRmaCaseNote(body, caseNumber);

        // TODO: test validations
    }
    /**
     * Creates an RMA
     *
     * This operation creates a tacRma entity.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createTacRmaTest() throws Exception {
        RmaCaseCreate body = null;
        RmaCase response = api.createTacRma(body);

        // TODO: test validations
    }
    /**
     * Get a list of attachments for a specific RMA case
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getRmaCaseAttachmentsTest() throws Exception {
        String caseNumber = null;
        Integer offset = null;
        Integer limit = null;
        List<Attachment> response = api.getRmaCaseAttachments(caseNumber, offset, limit);

        // TODO: test validations
    }
    /**
     * Get notes for a specific RMA
     *
     * Retrieve a list of notes attached to a specific RMA Case by its case number.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getRmaCaseNotesTest() throws Exception {
        String caseNumber = null;
        Integer offset = null;
        Integer limit = null;
        OffsetDateTime createdFrom = null;
        OffsetDateTime createdTo = null;
        OffsetDateTime createdSince = null;
        List<Note> response = api.getRmaCaseNotes(caseNumber, offset, limit, createdFrom, createdTo, createdSince);

        // TODO: test validations
    }
    /**
     * List or find RMA Cases
     *
     * This operation list or find RMA Cases
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listRmaCasesTest() throws Exception {
        String fields = null;
        Integer offset = null;
        Integer limit = null;
        OffsetDateTime createdFrom = null;
        OffsetDateTime createdTo = null;
        OffsetDateTime createdSince = null;
        TacCaseStatus caseStatus = null;
        String vendorRmaNumber = null;
        Boolean includeNotes = null;
        List<RmaCase> response = api.listRmaCases(fields, offset, limit, createdFrom, createdTo, createdSince, caseStatus, vendorRmaNumber, includeNotes);

        // TODO: test validations
    }
    /**
     * Retrieves an RMA Case by ID
     *
     * This operation retrieves a RmaCase entity. Attribute selection is enabled for all first level attributes.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void retrieveRmaCaseTest() throws Exception {
        String caseNumber = null;
        String fields = null;
        Boolean includeNotes = null;
        RmaCase response = api.retrieveRmaCase(caseNumber, fields, includeNotes);

        // TODO: test validations
    }
    /**
     * Retrieves an RMA Case Attachment by ID
     *
     * This operation retrieves an RMA Case Attachment
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void retrieveRmaCaseAttachmentTest() throws Exception {
        String caseNumber = null;
        String id = null;
        List<Attachment> response = api.retrieveRmaCaseAttachment(caseNumber, id);

        // TODO: test validations
    }
    /**
     * Retrieves an RMA Case Note by ID
     *
     * This operation retrieves an RMA CaseNote. Attribute selection is enabled for all first level attributes.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void retrieveRmaCaseNoteTest() throws Exception {
        String caseNumber = null;
        String id = null;
        Note response = api.retrieveRmaCaseNote(caseNumber, id);

        // TODO: test validations
    }
    /**
     * Updates an RMA Case by ID
     *
     * This operation updates a RmaCase entity. Attribute selection is enabled for all first level attributes.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateRmaCaseTest() throws Exception {
        RmaCase body = null;
        String caseNumber = null;
        api.updateRmaCase(body, caseNumber);

        // TODO: test validations
    }
    /**
     * Updates an RMA Case Note by ID
     *
     * This operation updates an RMA Case Note. Attribute selection is enabled for all first level attributes.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateRmaCaseNoteTest() throws Exception {
        Note body = null;
        String caseNumber = null;
        String id = null;
        api.updateRmaCaseNote(body, caseNumber, id);

        // TODO: test validations
    }
    /**
     * Upload an attachment to a specific RMA case
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void uploadRmaCaseAttachmentTest() throws Exception {
        File file = null;
        String description = null;
        String caseNumber = null;
        InlineResponse201 response = api.uploadRmaCaseAttachment(file, description, caseNumber);

        // TODO: test validations
    }
}
